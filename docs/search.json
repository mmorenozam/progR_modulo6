[
  {
    "objectID": "index.html#buenas-prácticas-de-programación",
    "href": "index.html#buenas-prácticas-de-programación",
    "title": "Módulo 6: Buenas prácticas de programación",
    "section": "Buenas prácticas de programación",
    "text": "Buenas prácticas de programación\nConsejos para evitar esto."
  },
  {
    "objectID": "index.html#organiza-tu-directorio-de-trabajo",
    "href": "index.html#organiza-tu-directorio-de-trabajo",
    "title": "Módulo 6: Buenas prácticas de programación",
    "section": "Organiza tu directorio de trabajo",
    "text": "Organiza tu directorio de trabajo\n\n\nEl mejor punto de comienzo es tener organizados tus directorios de trabajo.\nComo muchos de los consejos que enunciaré, este responde mucho a tus necesidades y preferencias personales.\nEl trabajar por proyectos en RStudio es una manera versátil y fácil de ayudarte con esa organización."
  },
  {
    "objectID": "index.html#nombrando-objetos-y-funciones",
    "href": "index.html#nombrando-objetos-y-funciones",
    "title": "Módulo 6: Buenas prácticas de programación",
    "section": "Nombrando objetos y funciones",
    "text": "Nombrando objetos y funciones\n\n\nAparte de los errores que pueden provocarse por nombrar mal objetos que ya vimos, una buena práctica es el dar nombres con significados congruentes a tus objetos en R.\nSi trabajas con una sola tabla de datos a la vez, no importa mucho el nombre que le des a esta, pues sabes que es la única tabla en tu ambiente de trabajo.\nEn cambio, si trabajas con múltiples tablas de datos, te aconsejo evitar nombres genéricos como tabla1, table2, datos_final etc.\nEs mejor usar una estructura que: compartan un prefijo y una parte en la que se diferencien por una descripción.\nEjemplo, supongamos que analizas varias tablas de ingresos y egresos por año y mes de una empresa. Una buena opción sería nombrarlas como:\n\n\n\n\ningresos_mrzo_2023\ningresos_abrl_2023\ningresos_mayo_2023\ningresos_juni_2023\n\n\n\n\nNota como en este ejemplo, también hemos dejado letras afuera del nombre del mes. Esto ayuda a hacer cambios de manera más rápida con atajos de teclas."
  },
  {
    "objectID": "index.html#nombrando-objetos-y-funciones-.smaller-visibility-uncounted",
    "href": "index.html#nombrando-objetos-y-funciones-.smaller-visibility-uncounted",
    "title": "Módulo 6: Buenas prácticas de programación",
    "section": "Nombrando objetos y funciones {.smaller visibility = “uncounted”}",
    "text": "Nombrando objetos y funciones {.smaller visibility = “uncounted”}\n\nAunque no cubrimos el cómo crear funciones en R, en caso que llegues a hacerlo, es útil dar el nombre más descriptivo posible de lo que hace esa función.\n\n\n\nLos nombres de las funciones de paquetes de R son generalmente cortos. Esto es gracias a la documentación de ayuda que las acompaña. Para nosotros que no creamos librerías, es más conveniente el llevar a cabo este tipo de nombramiento de funciones."
  },
  {
    "objectID": "index.html#código-limpio",
    "href": "index.html#código-limpio",
    "title": "Módulo 6: Buenas prácticas de programación",
    "section": "Código limpio",
    "text": "Código limpio\n\nUn código limpio es mucho mas sencillo de leer y revisar. No es lo mismo:\n\n\nranas$Pred&lt;-factor(ranas$Pred,levels=c(\"C\",\"NL\",\"L\"))\nbxplot&lt;-ggboxplot(ranas,x=\"Pred\",y=\"Age.FromEmergence\",color=\"Pred\")\nhsdvals&lt;-emmeans_test(log.Age.FromEmergence~Pred,\n                      data=ranas,p.adjust.method=\"mvt\")\nhsdvals&lt;-add_significance(hsdvals,p.col=\"p.adj\",output.col=\"p.adj.signif\",cutpoints=c(0,0.001,0.01,0.05,0.1,1),symbols=c(\"***\",\"**\",\"*\",\".\",\"ns\"))\nhsdvals&lt;-hsdvals%&gt;%add_xy_position(x=\"Pred\")\nbxplot+stat_pvalue_manual(hsdvals,y.position=c(120,130,140))\n\n\nQue:\n\n\nranas$Pred &lt;- factor(ranas$Pred, levels = c(\"C\", \"NL\", \"L\"))\n\nbxplot &lt;- ggboxplot(ranas,\n                    x = \"Pred\",\n                    y = \"Age.FromEmergence\",\n                    color = \"Pred\")\n\nhsdvals &lt;- emmeans_test(log.Age.FromEmergence ~ Pred,\n                        data = ranas,\n                        p.adjust.method = \"mvt\")\n\nhsdvals &lt;- add_significance(hsdvals, p.col = \"p.adj\",\n                            output.col = \"p.adj.signif\",\n                            cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1),\n                            symbols = c(\"***\", \"**\", \"*\", \".\", \"ns\"))\n\nhsdvals &lt;- hsdvals %&gt;%\n  add_xy_position(x = \"Pred\")\n\nbxplot + stat_pvalue_manual(hsdvals, y.position = c(120, 130, 140))"
  },
  {
    "objectID": "index.html#nombrando-objetos-y-funciones-1",
    "href": "index.html#nombrando-objetos-y-funciones-1",
    "title": "Módulo 6: Buenas prácticas de programación",
    "section": "Nombrando objetos y funciones",
    "text": "Nombrando objetos y funciones\n\nAunque no cubrimos el cómo crear funciones en R, en caso que llegues a hacerlo, es útil dar el nombre más descriptivo posible de lo que hace esa función.\n\n\n\nfuncion_filtrado_filas_vacias &lt;- function(){\n  \n}\n\n\n\n\nLos nombres de las funciones de paquetes de R son generalmente cortos. Esto es gracias a la documentación de ayuda que las acompaña. Para nosotros que no creamos librerías, es más conveniente el llevar a cabo este tipo de nombramiento de funciones."
  },
  {
    "objectID": "index.html#código-limpio-1",
    "href": "index.html#código-limpio-1",
    "title": "Módulo 6: Buenas prácticas de programación",
    "section": "Código limpio",
    "text": "Código limpio\n\n\nEn general:\n\nDeja espacios vacíos antes y despues de =, &lt;-, -, +, %&gt;% etc\nUn espacio vacío después de ,\nDa cortes de línea (enter) donde sea necesario para que las líneas de código no sean muy largas\nDeja un espacio vacío entre líneas o conjuntos de líneas que cumplen con una función específica."
  },
  {
    "objectID": "index.html#comenta-tu-código",
    "href": "index.html#comenta-tu-código",
    "title": "Módulo 6: Buenas prácticas de programación",
    "section": "Comenta tu código",
    "text": "Comenta tu código\n\n\nTu yo del futuro, le agradecerá a tu yo del pasado por los comentarios que dejes en los scripts que realices.\nYa te habrás dado cuenta de que # es el operador para comentar.\nPuedes también crear secciones para navegar tu script usando una sintaxis como ### nombre de la sección ###"
  },
  {
    "objectID": "index.html#adsf",
    "href": "index.html#adsf",
    "title": "Módulo 6: Buenas prácticas de programación",
    "section": "adsf",
    "text": "adsf"
  },
  {
    "objectID": "index.html#guarda-la-información-de-tu-sesión-de-trabajo",
    "href": "index.html#guarda-la-información-de-tu-sesión-de-trabajo",
    "title": "Módulo 6: Buenas prácticas de programación",
    "section": "Guarda la información de tu sesión de trabajo",
    "text": "Guarda la información de tu sesión de trabajo\n\n\nA lo largo del tiempo, las funciones de los paquetes pueden ser dadas de baja (o inclusive los paquetes pueden ser dados de baja).\nEsto es un problema sobre todo con código que lleva mucho tiempo sin ser usado.\nPara poder tener una mejor idea de como volver funcional de nuevo códigos viejos, es guardando la información de tu sesión de trabajo.\nEsto es muy útil sobretodo trabajando en reportes de Quarto. Para ello, basta añadir al final de un chunk de código el siguiente comando de R base\n\n\n\n\n\nR version 4.3.1 (2023-06-16 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 11 x64 (build 22621)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=German_Germany.utf8  LC_CTYPE=German_Germany.utf8   \n[3] LC_MONETARY=German_Germany.utf8 LC_NUMERIC=C                   \n[5] LC_TIME=German_Germany.utf8    \n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] compiler_4.3.1    fastmap_1.1.1     cli_3.6.1         tools_4.3.1      \n [5] htmltools_0.5.6   rstudioapi_0.15.0 yaml_2.3.7        rmarkdown_2.24   \n [9] knitr_1.42        jsonlite_1.8.7    xfun_0.40         digest_0.6.33    \n[13] rlang_1.1.1       evaluate_0.21"
  }
]